<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <xacro:macro name="crx10ial_ros2_control" params="name initial_positions_file">
        <xacro:property name="initial_positions" value="${load_yaml(initial_positions_file)['initial_positions']}"/>

        <!-- Simulation ros2_control interface -->
        <ros2_control name="${name}" type="system">
            <hardware>
                <!-- By default, set up controllers for simulation. This won't work on real hardware -->
                <plugin>mock_components/GenericSystem</plugin>
                <plugin>ign_ros2_control/IgnitionSystem</plugin>
            </hardware>

            <joint name="J1">
                <command_interface name="position">
                    <param name="min">{-2*pi}</param>
                    <param name="max">{2*pi}</param>
                </command_interface>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['J1']}</param>
                </state_interface>
                <state_interface name="velocity"/>
                <state_interface name="effort"/>
                <ros2_control>
                    <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                </ros2_control>
            </joint>

            <joint name="J2">
                <command_interface name="position">
                    <param name="min">{-2*pi}</param>
                    <param name="max">{2*pi}</param>
                </command_interface>               
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['J2']}</param>
                </state_interface>
                <state_interface name="velocity"/>
                <state_interface name="effort"/>
                <ros2_control>
                    <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                </ros2_control>
            </joint>

            <joint name="J3">
                <command_interface name="position">
                    <param name="min">{pi}</param>
                    <param name="max">{pi}</param>
                </command_interface>               
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['J3']}</param>
                </state_interface>
                <state_interface name="velocity"/>
                <state_interface name="effort"/>
                <ros2_control>
                    <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                </ros2_control>
            </joint>

            <joint name="J4">
                <command_interface name="position">
                    <param name="min">{-2*pi}</param>
                    <param name="max">{2*pi}</param>
                </command_interface>          
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['J4']}</param>
                </state_interface>
                <state_interface name="velocity"/>
                <state_interface name="effort"/>
                <ros2_control>
                    <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                </ros2_control>
            </joint>

            <joint name="J5">
                <command_interface name="position">
                    <param name="min">{-2*pi}</param>
                    <param name="max">{2*pi}</param>
                </command_interface>             
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['J5']}</param>
                </state_interface>
                <state_interface name="velocity"/>
                <state_interface name="effort"/>
                <ros2_control>
                    <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                </ros2_control>
            </joint>

            <joint name="J6">
                <command_interface name="position">
                    <param name="min">{-2*pi}</param>
                    <param name="max">{2*pi}</param>
                </command_interface>              
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['J6']}</param>
                </state_interface>
                <state_interface name="velocity"/>
                <state_interface name="effort"/>
                <ros2_control>
                    <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                </ros2_control>
            </joint>

        </ros2_control>

        <!-- Gazebo plugins -->
        <gazebo>
            <!-- ros2_control -->
            <plugin filename="ign_ros2_control-system" name="ign_ros2_control::IgnitionROS2ControlPlugin">
                <parameters>$(find robot_moveit_config)/config/controller_params.yaml</parameters>
            </plugin>

            <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
                <!-- Set the ROS 2 namespace for the robot -->
                <robotNamespace>/robot</robotNamespace>
                
                <!-- Path to the robot's hardware interface -->
                <parameters>$(find robot_moveit_config)/config/controller_params.yaml</parameters>
                
                <!-- Enable or disable publishing joint states -->
                <publishRate>50</publishRate> <!-- Publish joint states at 50 Hz -->

                <!-- Update rate for control (usually matches simulation update rate) -->
                <controlPeriod>0.001</controlPeriod> <!-- Control loop period in seconds -->

                <!-- Whether to publish the joint states (default is true) -->
                <publishJointStates>false</publishJointStates>
            </plugin>

            <!-- IMU -->
            <plugin filename="libignition-gazebo-imu-system.so" name="ignition::gazebo::systems::Imu"/>

            <!-- Sensor plugins (nog van smart_diffbot)-->
            <plugin filename="ignition-gazebo-sensors-system" name="ignition::gazebo::systems::Sensors">
                <render_engine>ogre2</render_engine>
            </plugin>

        </gazebo>
        
    </xacro:macro>
</robot>
